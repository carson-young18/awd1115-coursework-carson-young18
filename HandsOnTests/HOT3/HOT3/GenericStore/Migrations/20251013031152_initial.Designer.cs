// <auto-generated />
using System;
using GenericStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GenericStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251013031152_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenericStore.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Home"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Toys"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Outdoors"
                        });
                });

            modelBuilder.Entity("GenericStore.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GenericStore.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("GenericStore.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQty")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Brand = "AcoustiX",
                            CategoryId = 1,
                            Color = "Black",
                            ImageFileName = "headphones.jpg",
                            Name = "Bluetooth Headphones",
                            Price = 49.99m,
                            Slug = "bluetooth-headphones",
                            StockQty = 20
                        },
                        new
                        {
                            ProductId = 2,
                            Brand = "ClickPro",
                            CategoryId = 1,
                            Color = "White",
                            ImageFileName = "mouse.jpg",
                            Name = "Wireless Mouse",
                            Price = 19.99m,
                            Slug = "wireless-mouse",
                            StockQty = 50
                        },
                        new
                        {
                            ProductId = 3,
                            Brand = "BrightLite",
                            CategoryId = 2,
                            Color = "Black",
                            ImageFileName = "lamp.jpg",
                            Name = "LED Desk Lamp",
                            Price = 29.99m,
                            Slug = "led-desk-lamp",
                            StockQty = 30
                        },
                        new
                        {
                            ProductId = 4,
                            Brand = "HomeBrew",
                            CategoryId = 2,
                            Color = "Blue",
                            ImageFileName = "mug.jpg",
                            Name = "Ceramic Mug",
                            Price = 9.99m,
                            Slug = "ceramic-mug",
                            StockQty = 100
                        },
                        new
                        {
                            ProductId = 5,
                            Brand = "PlayTime",
                            CategoryId = 3,
                            Color = "Multicolor",
                            ImageFileName = "figure1.jpg",
                            Name = "Action Figure - Hero",
                            Price = 14.99m,
                            Slug = "action-figure-hero",
                            StockQty = 40
                        },
                        new
                        {
                            ProductId = 6,
                            Brand = "PlayTime",
                            CategoryId = 3,
                            Color = "Red",
                            ImageFileName = "figure2.jpg",
                            Name = "Action Figure - Villain",
                            Price = 14.99m,
                            Slug = "action-figure-villain",
                            StockQty = 35
                        },
                        new
                        {
                            ProductId = 7,
                            Brand = "TrailMate",
                            CategoryId = 4,
                            Color = "Green",
                            ImageFileName = "tent.jpg",
                            Name = "Camping Tent 2P",
                            Price = 89.99m,
                            Slug = "camping-tent-2p",
                            StockQty = 15
                        },
                        new
                        {
                            ProductId = 8,
                            Brand = "HydroMax",
                            CategoryId = 4,
                            Color = "Silver",
                            ImageFileName = "bottle.jpg",
                            Name = "Water Bottle 1L",
                            Price = 12.99m,
                            Slug = "water-bottle-1l",
                            StockQty = 120
                        },
                        new
                        {
                            ProductId = 9,
                            Brand = "AcoustiX",
                            CategoryId = 1,
                            Color = "Black",
                            ImageFileName = "speaker.jpg",
                            Name = "Bluetooth Speaker",
                            Price = 39.99m,
                            Slug = "bluetooth-speaker",
                            StockQty = 25
                        },
                        new
                        {
                            ProductId = 10,
                            Brand = "HomeBrew",
                            CategoryId = 2,
                            Color = "Gray",
                            ImageFileName = "pillow.jpg",
                            Name = "Throw Pillow",
                            Price = 24.99m,
                            Slug = "throw-pillow",
                            StockQty = 60
                        });
                });

            modelBuilder.Entity("GenericStore.Models.OrderItem", b =>
                {
                    b.HasOne("GenericStore.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GenericStore.Models.Product", b =>
                {
                    b.HasOne("GenericStore.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GenericStore.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GenericStore.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
